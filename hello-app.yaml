apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-deployment
spec:
  replicas: 2 # Yêu cầu: Luôn có 2 bản sao (Pod) của ứng dụng này chạy
  selector:
    matchLabels:
      app: hello-app
  template:
    metadata:
      labels:
        app: hello-app # Gắn nhãn cho các Pod để Service có thể tìm thấy
    spec:
      containers:
      - name: web-server
        image: tamnguyencoder/my-backend-app:latest
        ports:
        - containerPort: 3000
        env:
          - name: POSTGRES_HOST
            value: postgres-service
        envFrom:
        - configMapRef:
            name: app-config # Lấy tất cả key từ ConfigMap 'app-config'
        # Get POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB from secret
        - secretRef:
            name: postgres-secret # get all keys from Secret 'postgres-secret'

        # === Heath Check ===
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 5  # wait 5 seconds before starting the probe
          periodSeconds: 10 # every 10 seconds
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 15 # wait 15 seconds before starting the probe
          periodSeconds: 20 # every 20 seconds
---
apiVersion: v1
kind: Service
metadata:
  name: hello-service
spec:
  selector:
    app: hello-app # Tìm và gom nhóm các Pod có nhãn 'app: hello-app'
  ports:
    - protocol: TCP
      port: 80 # Service sẽ nhận traffic ở cổng 80...
      targetPort: 3000 # Service sẽ chuyển tiếp đến cổng 3000 của Pod